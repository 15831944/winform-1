<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAM
        CgAAAk1TRnQBSQFMAgEBAgEAAWgBAAFoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFIAASYBnQHSAf8BJgGdAdIB/wEmAZ0B0gH/ASYBnQHSAf+4AAMYASIDZAHg
        A2YB4wNpAeQDaQHkA2YB4wNfAd8DIwE0A2wB5QNpAeQDbgHlA2kB5ANgAd8DAAEBATMBkgHCAf8BxAHr
        AfcB/wHGAfQB+wH/AbsB7wH6Af8BJgGdAdIB/wEmAZ0B0gH/rAADCgENA20B5wNuAeUDbgHlA20B6gN0
        AesDbAHmA24B5QO0Af0DbgHmA4MB9AO3AfsDfgHxA24B5QNOAZYBLgGOAcEB/wFvAeEB9gH/AT4B2wH2
        Af8BPgHbAfYB/wHwAfwB/gH/ASYBnQHSAf8UAAMEAQWUAAMkATUDdwHtA3EB6AN3Ae0DvwH7A8EB+wN9
        AfQDcQHoA3cB8AO9AfwDuAH9A+YB/gOvAf0DhgH1AwQBBQErAYkBwQH/AZ8B5gH3Af8BIgHJAe8B/wE+
        AdsB9gH/AbAB7gH6Af8BJgGdAdIB/wEmAZ0B0gH/ASYBnQHSAf8fAAEBiAADWAHBA78B+wOsAfwD5QH+
        A+YB/gOoAf0DvgH7Aa8BngF/AfwBdgFwAW4B7AHAAbABmQH+AdsBzQG4Af8BuwG3Aa0B/QF0AXMBcAHs
        AzUBVQQAASsBiAHAAf8BggHhAfUB/wEiAckB7wH/AT4B2wH2Af8BsAHuAfoB/wHxAfwB/gH/ASYBnQHS
        Af8LAAEBmAADHgErA0cBggNMAZADigH7A6EB/gOhAf4DlQH9A0oBjQHlAbYBfwH+AeYBvQF/Af4B5gHB
        AYcB/gHmAckBmgH+AeYB0gGxAf4B5gHcAcsB/gNRAZwIAAEpAYcBvwH/AYUB4gH3Af8BIgHJAe8B/wE+
        AdsB9gH/AbAB7gH6Af8BJgGdAdIB/wEmAZ0B0gH/ASYBnQHSAf8BAAGGAcgB/wFcAmQB5wNOAZkDGAEh
        jAABhwF/AXkB9AH/AdkBogL/AdoBowL/AdwBqAL/AeABsgL/AeUBvgL/AesBzQL/AfEB3AH/Af0BxAFl
        Av8BxgFgAv8BygFtAv8B1AGRAv8B4AGwAv8B7AHQAf8DUQGcDAABKwGJAcEB/wGJAeIB9wH/ASIByQHv
        Af8BPgHbAfYB/wE+AdsB9gH/ATUB1QH0Af8BLQHQAfIB/wEnAcwB8AH/ASYBygHuAf8BHAG5AeUB/wFK
        AWgBdwHzAy0BRYgAAYwBhQF+AfUB5gG6AX8B/gHmAbsBfwH+AeYBvgF/Af4B5gHDAYoB/gHmAckBmwH+
        AeYB0AGtAf4B5gHYAcEB/gHlAawBdAH+AeYBqQFgAf4B5gGnAVsB/gHmAbEBdwH+AeYBwAGDAf4B5gHO
        AagB/gNRAZwQAAErAYkBwQH/AYkB4gH3Af8BIgHJAe8B/wEzAdQB8wH/AS4B0QHyAf8BLAHQAfIB/wEr
        Ac8B8QH/ASkBzgHxAf8BJwHMAfAB/wEmAckB7gH/AUoBagF3AfMDGAEhhAABjAGEAXsB9QH/AckBaQL/
        AccBZQL/AcsBbgL/AdEBiQL/AdgBnQL/AeEBswL/AeoBygH/Af0BzwGNAv8BygFqAv8BwwFZAv8BxgFi
        Av8B0wGPAv8B4wG4Af8DUQGcFAABDwGSAc0B/wFsAd4B9gH/ATQB1QH0Af8BMgHUAfMB/wExAdIB8wH/
        AS8B0QHyAf8BLQHQAfIB/wErAc8B8QH/ASoBzgHxAf8BJAG9AeYB/wFNAk4BloQAAYwBhAF3AfUB5gGu
        AW8B/gHmAagBXwH+AeYBqQFgAf4B5gGwAXIB/gHmAbkBfwH+AeYBwwGKAf4B5gHNAaQB/gHlAccBngH+
        AeYBxQGRAf4B5gG7AX8B/gHmAbkBfwH+AeYBvgF/Af4B5gHLAZ8B/gNRAZwUAAFVAV0BZAHqAW0B3wH2
        Af8BOAHXAfUB/wE2AdYB9AH/ATUB1QH0Af8BMwHUAfMB/wExAdMB8wH/AS8B0gHyAf8BLgHQAfIB/wEr
        AcwB7wH/AVoCYQHkhAABjAGEAXMB9QH/AcsBbQL/AcIBVgL/Ab8BTgL/AcEBVgL/AcsBbgL/AdYBlgL/
        AeEBsgH/AeABwQGbAf8B3wHCAZwB/gHfAcABlQH+Ad8BwAGUAf4B3wHCAZoB/gHbAcIBngH+A0ABcRUA
        AYYByAH/AYQB4QH3Af8BOwHZAfUB/wE6AdgB9QH/ATkB2AH1Af8BFQGsAd0B/wEAAYYByAH/ARQBqwHc
        Af8BMgHTAfMB/wE5AdMB8wH/ASkBagGOAfmEAAGMAYMBcAH1AeYBvAF/Af4B5gGxAXYB/gHmAawBaAH+
        AeYBrAFoAf4B5gGwAXQB/gHmAbsBfwH+AeYBxgGUAf4B5gHHAZkB/gMjATQkAAMEAQYBXAJkAecBjQHf
        AfQB/wE+AdsB9gH/AT0B2gH2Af8BPAHaAfUB/wEAAYoBygH/AbAB7gH6Af8BAAGKAcoB/wE2AdYB9AH/
        AWAB2AHyAf8BWgJhAeSEAAGMAYIBcAH1Af8B4wG3Av8B2AGbAv8B0AGIAv8BzQGAAv8BzwGEAv8B1AGR
        Av8B3gGsAv8B3wGxAf8DIwE0KAABUAJRAZ8BXQG7AeEB/wFmAeMB+AH/AT4B2wH2Af8BPgHbAfYB/wEZ
        Aa8B3gH/AQABhgHIAf8BGAGuAd4B/wFaAd8B9wH/AVoBvgHiAf8BTQJOAZaEAAGNAYEBcQH2AeYB2QHE
        Af4B5gHPAawB/gHmAccBlwH+AeYBwgGKAf4B5gHBAYYB/gHmAcQBjQH+AeYByAGYAf4B5gHEAZMB/gMj
        ATQoAAMSARgBVAFiAWkB7QGsAdwB8AH/AaMB7AH6Af8BXwHiAfgB/wFAAdsB9gH/AV0B4QH4Af8BoQHr
        AfoB/wGqAdwB8QH/AVUBXQFkAeoDEAEVhAADRwGCA4AB8wODAfQDgwH0A4MB9AODAfQDgwH0A4MB9ANi
        AeAwAAMuAUgBTgFfAWoB8AFcAboB4AH/AbgB4QHzAf8B5QH5Af0B/wG7AeMB8wH/AVwBugHgAf8BVQFd
        AWQB6gMrAULgAAMUARsBUAJRAZ8BVAFiAWkB7QEAAYYByAH/AVQBYgFpAe0BTwJRAZwDEAEViAABQgFN
        AT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAv8BDwH/BAABwAEAAQMB/wQAAYABAAED
        Ae8EAAGAAgAB/gQAAcABAAGAAd8EAAGAAQABwAEDBAABgAEAAeABAQQAAYABAAHwBQABgAEAAfgFAAGA
        AQAB+AUAAYABAAH4BQABgAEfAfAFAAGAAR8B+AUAAYABHwH4BQABgAE/AfwBAQQAAv8B/gEDBAAL
</value>
  </data>
</root>