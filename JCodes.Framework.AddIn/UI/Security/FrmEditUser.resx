<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAS
        CgAAAk1TRnQBSQFMAgEBAgEAATgBAAE4AQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFIAASwBnQHSAf8BLAGdAdIB/wEsAZ0B0gH/ASwBnQHSAf+4AAMYASIDdQHg
        A4UB4wOHAeQDhwHkA4QB4wNpAd8DIwE0A4cB5QOJAeQDjQHlA4kB5ANuAd8DAAEBATkBkgHCAf8BxAHr
        AfcB/wHGAfQB+wH/AbsB7wH6Af8BLAGdAdIB/wEsAZ0B0gH/rAADCgENA4oB5wONAeUDjQHlA4gB6gOP
        AesDiwHmA40B5QO6Af0DjQHmA5wB9APLAfsDlAHxA40B5QNOAZYBNAGOAcEB/wF1AeEB9gH/AUQB2wH2
        Af8BRAHbAfYB/wHwAfwB/gH/ASwBnQHSAf8UAAMEAQWUAAMkATUDlQHtA5MB6AOVAe0D0wH7A9YB+wOS
        AfQDkwHoA5MB8APOAfwDvgH9A/IB/gO1Af0DnwH1AwQBBQExAYkBwQH/AZ8B5gH3Af8BKAHJAe8B/wFE
        AdsB9gH/AbAB7gH6Af8BLAGdAdIB/wEsAZ0B0gH/ASwBnQHSAf8fAAEBiAADWgHBA9MB+wO4AfwD8QH+
        A/IB/gOsAf0D0gH7AbsBrgGRAfwBkAGIAYEB7AHMAbwBpQH+AdsBzQG4Af8BxQG9AbMB/QGPAY0BhwHs
        AzUBVQQAATEBiAHAAf8BggHhAfUB/wEoAckB7wH/AUQB2wH2Af8BsAHuAfoB/wHxAfwB/gH/ASwBnQHS
        Af8LAAEBmAADHgErA0cBggNMBJAB+wOtAf4DrQH+A5UB/QNKAY0B8QHCAX8B/gHyAckBiQH+AfIBzQGT
        Af4B8gHVAaYB/gHyAd4BvQH+AfIB6AHXAf4DUQGcCAABLwGHAb8B/wGFAeIB9wH/ASgByQHvAf8BRAHb
        AfYB/wGwAe4B+gH/ASwBnQHSAf8BLAGdAdIB/wEsAZ0B0gH/AQABhgHIAf8BUwFkAW8B5wNOAZkDGAEh
        jAABogGYAYwB9AH/AdkBogL/AdoBowL/AdwBqAL/AeABsgL/AeUBvgL/AesBzQL/AfEB3AH/Af0BxAFr
        Av8BxgFmAv8BygFzAv8B1AGRAv8B4AGwAv8B7AHQAf8DUQGcDAABMQGJAcEB/wGJAeIB9wH/ASgByQHv
        Af8BRAHbAfYB/wFEAdsB9gH/ATsB1QH0Af8BMwHQAfIB/wEtAcwB8AH/ASwBygHuAf8BIgG5AeUB/wE7
        AW8BhwHzAy0BRYgAAaoBnQGNAfUB8gHGAYEB/gHyAccBggH+AfIBygGKAf4B8gHPAZYB/gHyAdUBpwH+
        AfIB3AG5Af4B8gHkAc0B/gHxAbgBdAH+AfIBtQFgAf4B8gGzAVsB/gHyAb0BdwH+AfIBzAGPAf4B8gHa
        AbQB/gNRAZwQAAExAYkBwQH/AYkB4gH3Af8BKAHJAe8B/wE5AdQB8wH/ATQB0QHyAf8BMgHQAfIB/wEx
        Ac8B8QH/AS8BzgHxAf8BLQHMAfAB/wEsAckB7gH/ATsBcAGIAfMDGAEhhAABqgGbAYkB9QH/AckBbwL/
        AccBawL/AcsBdAL/AdEBiQL/AdgBnQL/AeEBswL/AeoBygH/Af0BzwGNAv8BygFwAv8BwwFfAv8BxgFo
        Av8B0wGPAv8B4wG4Af8DUQGcFAABFQGSAc0B/wFyAd4B9gH/AToB1QH0Af8BOAHUAfMB/wE3AdIB8wH/
        ATUB0QHyAf8BMwHQAfIB/wExAc8B8QH/ATABzgHxAf8BKgG9AeYB/wFNAk4BloQAAaoBmwGGAfUB8gG6
        AW8B/gHyAbQBXwH+AfIBtQFgAf4B8gG8AXIB/gHyAcUBfwH+AfIBzwGWAf4B8gHZAbAB/gHxAdMBqgH+
        AfIB0QGdAf4B8gHHAYQB/gHyAcUBfwH+AfIBygGLAf4B8gHXAasB/gNRAZwUAAFNAWQBcgHqAXMB3wH2
        Af8BPgHXAfUB/wE8AdYB9AH/ATsB1QH0Af8BOQHUAfMB/wE3AdMB8wH/ATUB0gHyAf8BNAHQAfIB/wEx
        AcwB7wH/AVMBYQFpAeSEAAGqAZoBhAH1Af8BywFzAv8BwgFcAv8BvwFUAv8BwQFcAv8BywF0Av8B1gGW
        Av8B4QGyAf8B4AHBAZsB/wHrAc4BqAH+AesBzAGhAf4B6wHMAaAB/gHrAc4BpgH+AecBzgGqAf4DQAFx
        FQABhgHIAf8BhAHhAfcB/wFBAdkB9QH/AUAB2AH1Af8BPwHYAfUB/wEbAawB3QH/AQABhgHIAf8BGgGr
        AdwB/wE4AdMB8wH/AT8B0wHzAf8BIwF3AaAB+YQAAaoBmQGCAfUB8gHIAYYB/gHyAb0BdgH+AfIBuAFo
        Af4B8gG4AWgB/gHyAbwBdAH+AfIBxwGDAf4B8gHSAaAB/gHyAdMBpQH+AyMBNCQAAwQBBgFTAWQBbwHn
        AY0B3wH0Af8BRAHbAfYB/wFDAdoB9gH/AUIB2gH1Af8BAAGKAcoB/wGwAe4B+gH/AQABigHKAf8BPAHW
        AfQB/wFmAdgB8gH/AVMBYQFpAeSEAAGqAZgBggH1Af8B4wG3Av8B2AGbAv8B0AGIAv8BzQGAAv8BzwGE
        Av8B1AGRAv8B3gGsAv8B3wGxAf8DIwE0KAABUAJRAZ8BYwG7AeEB/wFsAeMB+AH/AUQB2wH2Af8BRAHb
        AfYB/wEfAa8B3gH/AQABhgHIAf8BHgGuAd4B/wFgAd8B9wH/AWABvgHiAf8BTQJOAZaEAAGoAZYBfQH2
        AfIB5QHQAf4B8gHbAbgB/gHyAdMBowH+AfIBzgGWAf4B8gHNAZIB/gHyAdABmQH+AfIB1AGkAf4B8gHQ
        AZ8B/gMjATQoAAMSARgBSgFoAXoB7QGsAdwB8AH/AaMB7AH6Af8BZQHiAfgB/wFGAdsB9gH/AWMB4QH4
        Af8BoQHrAfoB/wGqAdwB8QH/AU0BZAFyAeoDEAEVhAADRwGCA5UB8wOcAfQDnAH0A5wB9AOcAfQDnAH0
        A5wB9ANrAeAwAAMuAUgBQQFoAX0B8AFiAboB4AH/AbgB4QHzAf8B5QH5Af0B/wG7AeMB8wH/AWIBugHg
        Af8BTQFkAXIB6gMrAULgAAMUARsBUAJRAZ8BSgFoAXoB7QEAAYYByAH/AUoBaAF6Ae0BTwJRAZwDEAEV
        iAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAv8BDwH/BAABwAEAAQMB/wQA
        AYABAAEDAe8EAAGAAgAB/gQAAcABAAGAAd8EAAGAAQABwAEDBAABgAEAAeABAQQAAYABAAHwBQABgAEA
        AfgFAAGAAQAB+AUAAYABAAH4BQABgAEfAfAFAAGAAR8B+AUAAYABHwH4BQABgAE/AfwBAQQAAv8B/gED
        BAAL
</value>
  </data>
</root>