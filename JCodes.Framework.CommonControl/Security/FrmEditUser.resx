<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAW
        CgAAAk1TRnQBSQFMAgEBAgEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFIAAS8BnQHSAf8BLwGdAdIB/wEvAZ0B0gH/AS8BnQHSAf+4AAMYASIDjAHg
        A6gB4wOsAeQDrAHkA6YB4wN9Ad8DIwE0A6UB5QOuAeQDsgHlA64B5AOHAd8DAAEBATwBkgHCAf8BxAHr
        AfcB/wHGAfQB+wH/AbsB7wH6Af8BLwGdAdIB/wEvAZ0B0gH/rAADCgENA6wB5wOyAeUDsgHlA6YB6gOp
        AesDrgHmA7IB5QO9Af0DtAHmA60B9APXAfsDpgHxA7IB5QNSAZYBNwGOAcEB/wF4AeEB9gH/AUcB2wH2
        Af8BRwHbAfYB/wHwAfwB/gH/AS8BnQHSAf8UAAMEAQWUAAMkATUDsgHtA7kB6AOxAe0D4QH7A+QB+wOi
        AfQDuQHoA6kB8APbAfwDxwH9A/gB/gO4Af0DsgH1AwQBBQE0AYkBwQH/AZ8B5gH3Af8BKwHJAe8B/wFH
        AdsB9gH/AbAB7gH6Af8BLwGdAdIB/wEvAZ0B0gH/AS8BnQHSAf8fAAEBiAADYgHBA+EB+wO+AfwD9wH+
        A/gB/gOvAf0D3gH7AcIBtAGaAfwBqwGfAZIB7AHSAcIBqwH+AdsBzQG4Af8BzgHCAbYB/QGqAaYBnQHs
        AzUBVQQAATQBiAHAAf8BggHhAfUB/wErAckB7wH/AUcB2wH2Af8BsAHuAfoB/wHxAfwB/gH/AS8BnQHS
        Af8LAAEBmAADHgErA0cBggNMAZADkwH7A7MB/gOzAf4DlQH9A0oBjQH3AcgBgwH+AfgBzwGPAf4B+AHT
        AZkB/gH4AdsBrAH+AfgB5AHDAf4B+AHuAd0B/gFVAlYBnAgAATIBhwG/Af8BhQHiAfcB/wErAckB7wH/
        AUcB2wH2Af8BsAHuAfoB/wEvAZ0B0gH/AS8BnQHSAf8BLwGdAdIB/wEAAYYByAH/AUoBawF8AecDTgGZ
        AxgBIYwAAbcBqQGZAfQB/wHZAaIC/wHaAaMC/wHcAagC/wHgAbIC/wHlAb4C/wHrAc0C/wHxAdwB/wH9
        AcQBbgL/AcYBaQL/AcoBdgL/AdQBkQL/AeABsAL/AewB0AH/A1YBnAwAATQBiQHBAf8BiQHiAfcB/wEr
        AckB7wH/AUcB2wH2Af8BRwHbAfYB/wE+AdUB9AH/ATYB0AHyAf8BMAHMAfAB/wEvAcoB7gH/ASUBuQHl
        Af8BMgFzAZUB8wMtAUWIAAG+AbABmwH1AfgBzAGHAf4B+AHNAYgB/gH4AdABkAH+AfgB1QGcAf4B+AHb
        Aa0B/gH4AeIBvwH+AfgB6gHTAf4B9wG+AXQB/gH4AbsBYAH+AfgBuQFbAf4B+AHDAXcB/gH4AdIBlQH+
        AfgB4AG6Af4DVgGcEAABNAGJAcEB/wGJAeIB9wH/ASsByQHvAf8BPAHUAfMB/wE3AdEB8gH/ATUB0AHy
        Af8BNAHPAfEB/wEyAc4B8QH/ATABzAHwAf8BLwHJAe4B/wEyAXcBlgHzAxgBIYQAAb4BrgGXAfUB/wHJ
        AXIC/wHHAW4C/wHLAXcC/wHRAYkC/wHYAZ0C/wHhAbMC/wHqAcoB/wH9Ac8BjQL/AcoBcwL/AcMBYgL/
        AcYBawL/AdMBjwL/AeMBuAH/A1YBnBQAARgBkgHNAf8BdQHeAfYB/wE9AdUB9AH/ATsB1AHzAf8BOgHS
        AfMB/wE4AdEB8gH/ATYB0AHyAf8BNAHPAfEB/wEzAc4B8QH/AS0BvQHmAf8BTQJOAZaEAAG+AasBkwH1
        AfgBwAFvAf4B+AG6AV8B/gH4AbsBYAH+AfgBwgFyAf4B+AHLAYMB/gH4AdUBnAH+AfgB3wG2Af4B9wHZ
        AbAB/gH4AdcBowH+AfgBzQGKAf4B+AHLAYMB/gH4AdABkQH+AfgB3QGxAf4DVgGcFAABQwFpAX8B6gF2
        Ad8B9gH/AUEB1wH1Af8BPwHWAfQB/wE+AdUB9AH/ATwB1AHzAf8BOgHTAfMB/wE4AdIB8gH/ATcB0AHy
        Af8BNAHMAe8B/wFLAWcBdAHkhAABvgGqAY4B9QH/AcsBdgL/AcIBXwL/Ab8BVwL/AcEBXwL/AcsBdwL/
        AdYBlgL/AeEBsgH/AeABwQGbAf8B8QHUAa4B/gHxAdIBpwH+AfEB0gGmAf4B8QHUAawB/gHtAdQBsAH+
        A0EBcRUAAYYByAH/AYQB4QH3Af8BRAHZAfUB/wFDAdgB9QH/AUIB2AH1Af8BHgGsAd0B/wEAAYYByAH/
        AR0BqwHcAf8BOwHTAfMB/wFCAdMB8wH/AR0BfwGrAfmEAAG+AakBiQH1AfgBzgGMAf4B+AHDAXYB/gH4
        Ab4BaAH+AfgBvgFoAf4B+AHCAXQB/gH4Ac0BiQH+AfgB2AGmAf4B+AHZAasB/gMjATQkAAMEAQYBSgFr
        AXwB5wGNAd8B9AH/AUcB2wH2Af8BRgHaAfYB/wFFAdoB9QH/AQMBigHKAf8BsAHuAfoB/wEDAYoBygH/
        AT8B1gH0Af8BaQHYAfIB/wFLAWcBdAHkhAABvgGoAYkB9QH/AeMBtwL/AdgBmwL/AdABiAL/Ac0BgAL/
        Ac8BhAL/AdQBkQL/Ad4BrAL/Ad8BsQH/AyMBNCgAAVACUQGfAWYBuwHhAf8BbwHjAfgB/wFHAdsB9gH/
        AUcB2wH2Af8BIgGvAd4B/wEAAYYByAH/ASEBrgHeAf8BYwHfAfcB/wFjAb4B4gH/AU0CTgGWhAABuwGm
        AYkB9gH4AesB1gH+AfgB4QG+Af4B+AHZAakB/gH4AdQBnAH+AfgB0wGYAf4B+AHWAZ8B/gH4AdoBqgH+
        AfgB1gGlAf4DIwE0KAADEgEYAUEBbQGHAe0BrAHcAfAB/wGjAewB+gH/AWgB4gH4Af8BSQHbAfYB/wFm
        AeEB+AH/AaEB6wH6Af8BqgHcAfEB/wFEAWkBfwHqAxABFYQAA0gBggOoAfMDsAH0A7AB9AOwAfQDsAH0
        A7AB9AOuAfQDeAHgMAADLgFIATgBbQGMAfABZQG6AeAB/wG4AeEB8wH/AeUB+QH9Af8BuwHjAfMB/wFl
        AboB4AH/AUQBaQF/AeoDKwFC4AADFAEbAVACUQGfAUABbQGHAe0BAAGGAcgB/wFAAW0BhwHtAU8CUQGc
        AxABFYgAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAL/AQ8B/wQAAcABAAED
        Af8EAAGAAQABAwHvBAABgAIAAf4EAAHAAQABgAHfBAABgAEAAcABAwQAAYABAAHgAQEEAAGAAQAB8AUA
        AYABAAH4BQABgAEAAfgFAAGAAQAB+AUAAYABHwHwBQABgAEfAfgFAAGAAR8B+AUAAYABPwH8AQEEAAL/
        Af4BAwQACw==
</value>
  </data>
</root>